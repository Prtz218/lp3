def solve_knapsack():
# Taking input for value array
    val = list(map(int, input("Enter values separated by space:").split()))
# Taking input for weight array
    wt = list(map(int, input("Enter weights separated by space: ").split()))
# Taking input for W (total knapsack capacity)
    W = int(input("Enter total knapsack capacity: "))
    n = len(val) 
    
    def knapsack(W, wt, val, n):
    # base case
        if n == 0 or W == 0:
            return 0
    # Higher weight than available
        if wt[n-1] > W:
            return knapsack(W,wt,val, n - 1)
        else:
            return max(val[n-1] + knapsack(W - wt[n-1],wt,val, n - 1), knapsack(W,wt,val, n - 1))
    # max(including , not including)
    print(knapsack(W, wt, val, n))
solve_knapsack()


